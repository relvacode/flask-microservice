user root;
worker_processes 4;
pid /run/nginx.pid;
daemon off;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
	log_format logstash '$http_host '
	        '$remote_addr [$time_local] '
        	'"$request" $status $body_bytes_sent '
       		'"$http_referer" "$http_user_agent" '
        	'$request_time '
        	'$upstream_response_time';

	# Buffers
	client_body_buffer_size 10K;
	client_header_buffer_size 1k;
	large_client_header_buffers 2 16k;

	proxy_buffers 8 24k;
	proxy_buffer_size 2k;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /dev/stdout logstash;
	error_log /dev/stderr;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";
        gzip_comp_level  2;
        gzip_min_length  1000;
        gzip_proxied     expired no-cache no-store private auth;
        gzip_types       text/plain application/x-javascript text/xml text/css application/xml;

	root /app/static;

	server {
		listen 80;

		# Force 404 if favicon can't be found
		# This is to prevent constantly loading index.html if favicon.ico doesn't exist
		location /favicon.ico {
			try_files $uri =404;
		}

		# Static content
		# To enable HTML5 mode in popular web frameworks, any 404 is redirected to index.html
		location / {
			try_files $uri $uri/ /index.html =404;
		}

		# Python uWSGI proxy via socketls

		location /api {
			uwsgi_pass unix:///tmp/uwsgi.sock;
			uwsgi_request_buffering off;
			include uwsgi_params;
		}
	}
}

